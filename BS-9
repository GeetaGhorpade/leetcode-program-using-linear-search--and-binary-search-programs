#include <iostream>
#include <vector>
using namespace std;

int firstOccurrence(const vector<int>& arr, int target) {
    int low = 0, high = arr.size()-1, result = -1;
    while(low <= high) {
        int mid = low + (high - low) / 2;
        if(arr[mid] == target) {
            result = mid;
            high = mid - 1;
        } else if(arr[mid] < target)
            low = mid + 1;
        else
            high = mid - 1;
    }
    return result;
}

int lastOccurrence(const vector<int>& arr, int target) {
    int low = 0, high = arr.size()-1, result = -1;
    while(low <= high) {
        int mid = low + (high - low) / 2;
        if(arr[mid] == target) {
            result = mid;
            low = mid + 1;
        } else if(arr[mid] < target)
            low = mid + 1;
        else
            high = mid - 1;
    }
    return result;
}

int main() {
    vector<int> arr = {1, 2, 2, 2, 3, 4, 5};
    int target = 2;
    int first = firstOccurrence(arr, target);
    int last = lastOccurrence(arr, target);
    int count = (first == -1) ? 0 : last - first + 1;
    cout << "Element " << target << " occurs " << count << " times." << endl;
    return 0;
}
